//I'm growing proud of this pcb code.
//pins 0 - 13 and GND and AREF on one side
//A5 analog input on the other side
//OK note to self: Next time, start with component modules with numbered pins, then a list of trace coordinates for every trace.

//Input parameters
pinneavstand=2.54;
pinnebredde=0.8;
pinnelengde=0.8;
pinnehoyde=11;
pad=1.0;
hullradius=0.4;
sjusegmentlengde=17.5;
sjusegmentbredde=12.5;
pothoyde=5;
potradius=7.5;
klaring=0.3;
offsetY=5.3;
offsetX=0;
detail=5;
ramme=0.6;
heigth=58.3;
width=53;
//components lists, center x, y and rotation, then pins
potone=[[-14,-28,0],[potradius/2+1,-2*pinneavstand],[-potradius/2 , 0],[potradius/2+1,2*pinneavstand]];
sevensone=[[10,-26,0],[-sjusegmentlengde/2+1,-2*pinneavstand],[-sjusegmentlengde/2+1,-pinneavstand],[-sjusegmentlengde/2+1,0],[-sjusegmentlengde/2+1,+pinneavstand],[-sjusegmentlengde/2+1,+2*pinneavstand],[sjusegmentlengde/2-1,+2*pinneavstand],[sjusegmentlengde/2-1,+pinneavstand],[sjusegmentlengde/2-1,0],[sjusegmentlengde/2-1,-pinneavstand],[sjusegmentlengde/2-1,-2*pinneavstand]];
sevenstwo=[[10,-26+sjusegmentbredde+1,0],[-sjusegmentlengde/2+1,-2*pinneavstand],[-sjusegmentlengde/2+1,-pinneavstand],[-sjusegmentlengde/2+1,0],[-sjusegmentlengde/2+1,+pinneavstand],[-sjusegmentlengde/2+1,+2*pinneavstand],[sjusegmentlengde/2-1,+2*pinneavstand],[sjusegmentlengde/2-1,+pinneavstand],[sjusegmentlengde/2-1,0],[sjusegmentlengde/2-1,-pinneavstand],[sjusegmentlengde/2-1,-2*pinneavstand] ];
pinplacement=[[-25+offsetX,-32+offsetY],[25+offsetX,-32+offsetY],[25+offsetX,-32+offsetY+8.5*pinneavstand]];
//  MAIN  code starts here where various modules are called
//This is where we duplicate the circuit
color("black")
    for (b=[0:180:180]){
       rotate([0,0,b]){
        translate([offsetX,offsetY,0])
traces();
difference(){
copperclad();              
textlabel();  
color("white")roomfortraces();                
}
}
}
//pins();
//arduinoUno();
//shield();
//spacers();
//potmeter(potone[0][0],potone[0][1],potone[0][2]);
//sevensegment(sevensone[0]);
//sevensegment(sevenstwo[0]);
border();

//   ****            MODULES       ****
module spacers(){
    difference(){
    union(){
    translate([pinplacement[0][0],pinplacement[0][1],-0.5])cube(3,center=true);
    translate([pinplacement[2][0],pinplacement[2][1]-2,-0.5])cube([3,pinneavstand*17,3],center=true);
}
pins();
}
}
module traces () {
color("black")
{    
    for (m=[0:pinneavstand:pinneavstand*5])
    {
    bane(25,-32+m,25-2.5,-32+m-1,1,1);
bane(25,-32+pinneavstand*7,25-2.5,-32+pinneavstand*7-1,1,1);
        bane(25,-32+pinneavstand*6,25-2.5,-32+pinneavstand*6-1,1,1);
bane(25,-32+pinneavstand*8.5+m,25-2.5,-32+pinneavstand*8.5+m-2,1,1);      
}
//THIS IS WORK IN PROGRESS HERE
 for (n=[1:1:len(sevensone)-1]){
    bane(sevensone[0][0]+sevensone[n][0],sevensone[0][1]+sevensone[n][1],sevensone[0][0]+sevensone[n][0]*1.2,sevensone[0][1]+sevensone[n][1],1,1);
     bane(sevenstwo[0][0]+sevenstwo[n][0],sevenstwo[0][1]+sevenstwo[n][1],sevenstwo[0][0]+sevenstwo[n][0]*1.2,sevenstwo[0][1]+sevenstwo[n][1],1,1);
 }
          
    //Ground-traces
    bane(pinplacement[1][0],pinplacement[1][1]-offsetY+pinneavstand*(8+6.5),sevensone[0][0]-1*((sjusegmentlengde/2)-1),sevenstwo[0][1],1,1);
    bane(pinplacement[2][1]+1*((sjusegmentlengde/2)-1),sevenstwo[0][1],pinplacement[1][0]-1*((sjusegmentlengde/2)-1),sevenstwo[0][1],1,1);
    bane(sevensone[0][0]+1*((sjusegmentlengde/2)-1),sevensone[0][1],sevensone[0][0]-1*((sjusegmentlengde/2)-1),sevenstwo[0][1],1,1);    
    bane(sevensone[0][0]-((sjusegmentlengde/2)-1),sevensone[0][1]+0+0*1,sevensone[0][0]-((sjusegmentlengde/2)+1.6),sevensone[0][1]+0+0*1-2,1,0);  
    bane(sevensone[0][0]-((sjusegmentlengde/2)+1.6),sevensone[0][1]+0+0*1-2,potone[0][0]+potradius+1,potone[0][1]-2*pinneavstand,0,1);    
     }
    //aref-pin trace
bane(pinplacement[1][0]-offsetX,pinplacement[1][1]-offsetY+pinneavstand*(8+7.5),+3,-32+pinneavstand*11.0,1,0);
bane(+3,-32+pinneavstand*11.0,-3,-32+pinneavstand*9.0,0,0);
bane(-3,-32+pinneavstand*9.0,potone[0][0]+potradius+1,potone[0][1]+2*pinneavstand,0,1);
//A5 analog input from the potmeter
    bane(potone[0][0]-potradius,potone[0][1],pinplacement[0][0],pinplacement[0][1]-offsetY ,1,1);      
     
    }
module roomfortraces () {
     translate([offsetX,offsetY,0])
      color("black")
{   for (m=[0:pinneavstand:pinneavstand*5])
    {
    baneplass(25,-32+m,25-2.5,-32+m-1,1,1);
baneplass(25,-32+pinneavstand*7,25-2.5,-32+pinneavstand*7-1,1,1);
        baneplass(25,-32+pinneavstand*6,25-2.5,-32+pinneavstand*6-1,1,1);
baneplass(25,-32+pinneavstand*8.5+m,25-2.5,-32+pinneavstand*8.5+m-2,1,1);      
}
for (n=[0:sjusegmentbredde+1:sjusegmentbredde+1]){
 for (o=[pinneavstand:pinneavstand:2*pinneavstand]){
  for (p=[-1:2:1]){  
    baneplass(10+((sjusegmentlengde/2)-1),-26+n+o*p,10+((sjusegmentlengde/2)+1.5),-26+n+o*p-1,1,1);
    baneplass(10-((sjusegmentlengde/2)-1),-26+n+o*p,10-((sjusegmentlengde/2)+1.6),-26+n+o*p-2,1,1);  
          }
          }
          }
    //Ground-traces in copper clad
    baneplass(pinplacement[1][0],pinplacement[1][1]-offsetY+pinneavstand*(8+6.5),sevensone[0][0]-1*((sjusegmentlengde/2)-1),sevenstwo[0][1],1,1);
    baneplass(pinplacement[2][1]+1*((sjusegmentlengde/2)-1),sevenstwo[0][1],pinplacement[1][0]-1*((sjusegmentlengde/2)-1),sevenstwo[0][1],1,1);
    baneplass(sevensone[0][0]+1*((sjusegmentlengde/2)-1),sevensone[0][1],sevensone[0][0]-1*((sjusegmentlengde/2)-1),sevenstwo[0][1],1,1);    
    baneplass(sevensone[0][0]-((sjusegmentlengde/2)-1),sevensone[0][1]+0+0*1,sevensone[0][0]-((sjusegmentlengde/2)+1.6),sevensone[0][1]+0+0*1-2,1,0);  
    baneplass(sevensone[0][0]-((sjusegmentlengde/2)+1.6),sevensone[0][1]+0+0*1-2,potone[0][0]+potradius+1,potone[0][1]-2*pinneavstand,0,1);    
     }
    //aref-pin trace in copper clad
baneplass(pinplacement[1][0]-offsetX,pinplacement[1][1]+pinneavstand*(8+7.5),+3,-32+pinneavstand*11.0+offsetY,1,0);
baneplass(+3,-32+pinneavstand*11.0+offsetY,-3,-32+pinneavstand*9.0+offsetY,0,0);
baneplass(-3,-32+pinneavstand*9.0+offsetY,potone[0][0]+potradius+1,potone[0][1]+2*pinneavstand+offsetY,0,1);
//A5 analog input from the potmeter in copper clad
    baneplass(potone[0][0]-potradius,potone[0][1]+offsetY,pinplacement[0][0],pinplacement[0][1] ,1,1);
    }
module border(){
 translate([0,0,2])color("black")difference(){
cube([width+3*ramme,heigth+3*ramme,2],center=true);
cube([width-ramme,heigth-ramme,4],center=true);
}  
}
module pins () {
   for (i=[0:pinneavstand:pinneavstand*7])
    {
    translate([pinplacement[1][0],pinplacement[1][1]+i,0])pinne();
    translate([pinplacement[2][0],pinplacement[2][1]+i,0])pinne();
    translate([pinplacement[0][0],pinplacement[0][1],0])pinne();  
 }    
 }
module arduinoUno () {
    translate([offsetX,offsetY,-5])color("green")cube([53,68,2],center=true);  
    }
module textlabel() {
      translate([offsetX,offsetY-2,-1])linear_extrude(6){
translate([-25,-27.0])rotate([0,0,37])text("Kretskort√∏ving",2.85);
translate([-18,-29])rotate([0,0,36])text("EL1B",4.4);
translate([-14.5,-32])rotate([0,0,36])text("2022/2023",2.35);
translate([+5,-25.5])rotate([0,0,42])text("LAGET AV:",1.6);}
}
module shield (){
 translate([offsetX,offsetY,1])color("pink")linear_extrude(2)polygon([[27,15],[27,-34],[-27,-34],[-27,-26]]);  
}
module copperclad (){
translate([offsetX,offsetY-2,2])color("black")linear_extrude(1)polygon([[26,17],[26,-32],[-26,-32],[-26,-24]]);  
}
module sevensegment(x,y,rotation){
translate([x+offsetX,y+offsetY,0])rotate([0,0,rotation]){
   for (k=[-2*pinneavstand:pinneavstand:2*pinneavstand]){
    for (l=[-1:2:1]){
  translate([0,0,6])color("white")cube([sjusegmentlengde,sjusegmentbredde,pothoyde],center=true);
          translate([l*((sjusegmentlengde/2)-1),k,3])pinne();
              }
              }
              }
}

module potmeter(x,y,rotation){
    translate([x+offsetX,y+offsetY,0])rotate([0,0,rotation]){
 color("black")translate([0,0,6])cylinder(pothoyde,potradius,potradius,center=true);
  translate([-potradius,0,3])pinne();
  translate([potradius+1,2*pinneavstand,3])pinne();
  translate([potradius+1,-2*pinneavstand,3])pinne();  
}}

//The two last arguments in "bane" is 1 for pad or 0 for via at start and end of trace
module bane(startx,starty,sluttx,slutty,startpad,endpad){
  difference(){
     union(){
         translate([0,0,1]) linear_extrude(1){
        if (startpad==1)translate([startx,starty,0])circle(pad, $fn=detail);
       if (endpad==1)translate([sluttx,slutty,0])circle(pad, $fn=detail);
       
    translate([startx+(sluttx-startx)/2,starty+(slutty-starty)/2,-3])rotate([0,0,90+asin((sluttx-startx)/sqrt((sluttx-startx)*(sluttx-startx)+(slutty-starty)*(slutty-starty)))])square([sqrt((sluttx-startx)*(sluttx-startx)+(slutty-starty)*(slutty-starty)),pad],center=true);
if (startpad==0)translate([startx,starty,1])circle(pad/2);
if (endpad==0)translate([sluttx,slutty,1])circle(pad/2);
    }
}
if (startpad==1)translate([startx,starty,0])cylinder(15,hullradius,hullradius,center=true );
if (endpad==1)translate([sluttx,slutty,0])cylinder(15,hullradius,hullradius,center=true );
}
}
module baneplass(startx,starty,sluttx,slutty,startpad,endpad){
  difference(){
     union(){
         translate([0,0,1]) linear_extrude(5){
        if (startpad==1)translate([startx,starty,0])circle(pad+klaring, $fn=detail);
       if (endpad==1)translate([sluttx,slutty,0])circle(pad+klaring, $fn=detail);
       
    translate([startx+(sluttx-startx)/2,starty+(slutty-starty)/2,-3])rotate([0,0,90+asin((sluttx-startx)/sqrt((sluttx-startx)*(sluttx-startx)+(slutty-starty)*(slutty-starty)))])square([sqrt((sluttx-startx)*(sluttx-startx)+(slutty-starty)*(slutty-starty)),pad+2*klaring],center=true);
if (startpad==0)translate([startx,starty,1])circle(pad/2+klaring);
if (endpad==0)translate([sluttx,slutty,1])circle(pad/2+klaring);
    }
}
}
}
module pinne (){
 color("silver")cube([pinnebredde,pinnebredde,pinnehoyde],center=true);  
}
